// JenScript - 1.3.1 2017-06-03
// http://jenscript.io - Copyright 2017 SÃ©bastien Janaud. All Rights reserved


!function(){JenScript.GeoJSON=function(a){this.init(a),this.Id="GeoJSON"+JenScript.sequenceId++,this.geom=["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"]},JenScript.Model.addMethods(JenScript.GeoJSON,{init:function(a){this.data=a||{}},getId:function(){return this.Id},isFeatureCollection:function(){return"FeatureCollection"===this.getType()},isFeature:function(){return"Feature"===this.getType()},isGeometry:function(){for(var a=0;a<this.geom.length;a++){var b=this.geom[a];if(this.getType()===b)return!0}return!1},getProperties:function(){return this.data.properties},getProperty:function(a){return this.data.properties[a]},getType:function(){return this.data.type}}),JenScript.MapGeometry=function(a){this._init(a)},JenScript.Model.inheritPrototype(JenScript.MapGeometry,JenScript.GeoJSON),JenScript.Model.addMethods(JenScript.MapGeometry,{_init:function(a){JenScript.GeoJSON.call(this,a),this.Id="mapgeometry"+JenScript.sequenceId++,this.coordinates=this.data.coordinates},toString:function(){return"JenScript.MapGeometry"},getCoordinates:function(){return this.coordinates},isPolygon:function(){return"Polygon"===this.getType()},isMultiPolygon:function(){return"MultiPolygon"===this.getType()},isPoint:function(){return"Point"===this.getType()}}),JenScript.MapPoint=function(a){this.__init(a)},JenScript.Model.inheritPrototype(JenScript.MapPoint,JenScript.MapGeometry),JenScript.Model.addMethods(JenScript.MapPoint,{__init:function(a){JenScript.MapGeometry.call(this,a),this.Id="mappoint"+JenScript.sequenceId++},toString:function(){return"JenScript.MapPoint"}}),JenScript.MapPolygon=function(a){this.__init(a)},JenScript.Model.inheritPrototype(JenScript.MapPolygon,JenScript.MapGeometry),JenScript.Model.addMethods(JenScript.MapPolygon,{__init:function(a){JenScript.MapGeometry.call(this,a),this.Id="mappolygon"+JenScript.sequenceId++},toString:function(){return"JenScript.MapPolygon"}}),JenScript.MapMultiPolygon=function(a){this.__init(a)},JenScript.Model.inheritPrototype(JenScript.MapMultiPolygon,JenScript.MapGeometry),JenScript.Model.addMethods(JenScript.MapMultiPolygon,{__init:function(a){JenScript.MapGeometry.call(this,a),this.Id="mapmultipolygon"+JenScript.sequenceId++},toString:function(){return"JenScript.MapMultiPolygon"}}),JenScript.MapFeature=function(a){this._init(a)},JenScript.Model.inheritPrototype(JenScript.MapFeature,JenScript.GeoJSON),JenScript.Model.addMethods(JenScript.MapFeature,{_init:function(a){JenScript.GeoJSON.call(this,a),this.Id="mapfeature"+JenScript.sequenceId++,this.geometry=new JenScript.MapGeometry(this.data.geometry),this.geometry.isPolygon()?this.geometry=new JenScript.MapPolygon(this.data.geometry):this.geometry.isMultiPolygon()?this.geometry=new JenScript.MapMultiPolygon(this.data.geometry):this.geometry.isPoint()&&(this.geometry=new JenScript.MapPoint(this.data.geometry)),this.fillColor="orange",this.fillOpacity=.2,this.strokeColor="white",this.strokeOpacity=1,this.strokeWidth=.5},getGeometry:function(){return this.geometry}}),JenScript.MapFeatureCollection=function(a){this._init(a)},JenScript.Model.inheritPrototype(JenScript.MapFeatureCollection,JenScript.GeoJSON),JenScript.Model.addMethods(JenScript.MapFeatureCollection,{_init:function(a){JenScript.GeoJSON.call(this,a),this.Id="mapfeaturecollection"+JenScript.sequenceId++,this.features=[];for(var b=0;b<this.data.features.length;b++)this.features[b]=new JenScript.MapFeature(this.data.features[b])},size:function(){return this.features.length},getFeature:function(a){return this.features[a]},getFeatures:function(){return this.features}})}(),function(){JenScript.MapBackgroundPlugin=function(a){this._init(a)},JenScript.Model.inheritPrototype(JenScript.MapBackgroundPlugin,JenScript.Plugin),JenScript.Model.addMethods(JenScript.MapBackgroundPlugin,{_init:function(a){a=a||{},a.priority=1e3,a.name="MapBackgroundPlugin",JenScript.Plugin.call(this,a)},paintPlugin:function(a,b){if(b===JenScript.ViewPart.Device){var c=this.getProjection().getView().getDevice().getWidth(),d=this.getProjection().getView().getDevice().getHeight(),e=(new JenScript.SVGRect).origin(0,0).size(c,d);a.insertSVG(e.strokeNone().fill("#3498db").toSVG())}}})}(),function(){JenScript.TilePlugin=function(a){this._init(a)},JenScript.Model.inheritPrototype(JenScript.TilePlugin,JenScript.Plugin),JenScript.Model.addMethods(JenScript.TilePlugin,{_init:function(a){a=a||{},this.tileServer=void 0!==a.tileServer?a.tileServer:"https://a.tile.openstreetmap.org",this.opacity=void 0!==a.opacity?a.opacity:1,a.priority=1e3,a.name="TilePlugin",this.tms=void 0!==a.tms?a.tms:!1,JenScript.Plugin.call(this,a)},onProjectionRegister:function(){var a=this;this.getProjection().addProjectionListener("boundChanged",function(){a.repaintPlugin()},"Tile plugin listener for projection bound changed"),this.addPluginListener("scale",function(){a.repaintPlugin()},"Tile plugin listener for scale changed"),this.addPluginListener("translate",function(){a.repaintPlugin()},"Tile plugin listener for translate changed")},createDalle:function(a){this.destroyGraphics();var b=this.getProjection(),c=b.getCenterPosition(),d=b.getProjection(),e=d.getSquareTileSize(),f=0,g=1;if(this.sx<1)for(var h=!0,i=1,j=-1;h;){var k=i/2,l=i;this.sx>=k&&this.sx<l&&(f=j,g=k,h=!1),j--,i=k}else for(var h=!0,i=1,j=0;h;){var k=i,l=2*i;this.sx>=k&&this.sx<l&&(f=j,g=k,h=!1),j++,i=l}var m=new JenScript.MapProjection({level:d.getZoom()+f,centerPosition:c});m.view=this.getView();for(var n=m.getProjection(),o=this.getView().getDevice().getWidth(),p=this.getView().getDevice().getHeight(),q=this.p2u({x:0,y:0}).x,r=this.p2u({x:o,y:0}).x,s=this.p2u({x:0,y:0}).y,t=this.p2u({x:0,y:p}).y,u=n.longToXIndex(q),v=n.longToXIndex(r),w=n.latToYIndex(s),x=n.latToYIndex(t),y=b.longToPixel(m.getMinX()),z=m.longToPixel(m.getMinX()),A=b.latToPixel(m.getMinY()),B=m.latToPixel(m.getMinY()),C=y-z,D=A-B,E=u;v>=E;E++)for(var F=w;x>=F;F++){var G=n.tileToLong(E),H=n.tileToLat(F),I=m.longToPixel(G),J=m.latToPixel(H);if(n.getZoom()>=0&&E>=0&&F>=0&&E<=n.getMaxTileIndex()&&F<=n.getMaxTileIndex()){var K;K=this.tms?this.tileServer+"/"+n.getZoom()+"/"+E+"/"+(n.getMaxTileIndex()-F)+".png":this.tileServer+"/"+n.getZoom()+"/"+E+"/"+F+".png";var L=(new JenScript.SVGImage).attr("transform","translate("+C+","+-D+") scale("+1/g+")").opacity(this.opacity).xlinkHref(K).origin(I,J).size(e,e);a.insertSVG(L.toSVG())}}},paintPlugin:function(a,b){b===JenScript.ViewPart.Device&&this.createDalle(a)}})}(),function(){JenScript.MapTranslatePlugin=function(a){this._init(a)},JenScript.Model.inheritPrototype(JenScript.MapTranslatePlugin,JenScript.Plugin),JenScript.Model.addMethods(JenScript.MapTranslatePlugin,{_init:function(a){a=a||{},a.priority=1e3,a.name="MapTranslatePlugin",JenScript.Plugin.call(this,a),this.startPoint,this.currentPoint,this.translate=!1},onPress:function(a,b,c,d){a.preventDefault&&a.preventDefault(),this.translate=!0,this.startPoint=new JenScript.Point2D(c,d)},onRelease:function(){this.translate=!1},onMove:function(a,b,c,d){if(this.translate){this.currentPoint=new JenScript.Point2D(c,d);var e=this.getProjection().pixelToLong(this.startPoint.x)-this.getProjection().pixelToLong(this.currentPoint.x),f=this.getProjection().pixelToLat(this.startPoint.y)-this.getProjection().pixelToLat(this.currentPoint.y),g=this.getProjection().getCenterPosition();this.getProjection().setCenterPosition(new JenScript.GeoPosition(g.latitude+f,g.longitude+e)),this.startPoint=this.currentPoint}}})}(),function(){JenScript.ZoomMapWheelPlugin=function(a){this._init(a)},JenScript.Model.inheritPrototype(JenScript.ZoomMapWheelPlugin,JenScript.Plugin),JenScript.Model.addMethods(JenScript.ZoomMapWheelPlugin,{_init:function(a){a=a||{},a.name="ZoomMapWheelPlugin",a.selectable=!1,a.priority=1e3,this.increment=void 0!==a.increment?a.increment:1,this.wheelListeners=[],JenScript.Plugin.call(this,a)},addWheelListener:function(a,b,c){var d={action:a,onEvent:b,name:c};this.wheelListeners[this.wheelListeners.length]=d},fireWheelEvent:function(a){for(var b=0;b<this.wheelListeners.length;b++){var c=this.wheelListeners[b];c.action===a&&c.onEvent(this)}},onPress:function(){this.stopWheel=!0},onRelease:function(){this.stopWheel=!1},onMove:function(a,b,c,d){var e=new JenScript.Point2D(c,d);this.mp=this.getProjection().pixelToUser(e)},onWheel:function(a){a.preventDefault();var b=this,c=function(a){setTimeout(function(){b.zoomIn()},100*a)},d=function(a){setTimeout(function(){b.zoomOut()},100*a)},e=function(a){if(0>a)for(var b=-a,e=0;b>e;e++)c(e);else for(var b=a,e=0;b>e;e++)d(e)};a.deltaY&&e(a.deltaY)},zoomIn:function(){this.stopWheel||(this.getProjection().setLevel(this.getProjection().getLevel()+this.increment),void 0!==this.mp,this.fireWheelEvent("zoomIn"))},zoomOut:function(){this.stopWheel||(this.getProjection().setLevel(this.getProjection().getLevel()-this.increment),void 0!==this.mp,this.fireWheelEvent("zoomOut"))}})}(),function(){JenScript.GeoRemote=function(a){this.path=a,this.fill=function(a){this.path.element.setAttribute("fill",a),this.path.feature.fillColor=a},this.fillOpacity=function(a){this.path.element.setAttribute("fill-opacity",a),this.path.feature.fillOpacity=a},this.stroke=function(a){this.path.element.setAttribute("stroke",a),this.path.feature.strokeColor=a},this.strokeOpacity=function(a){this.path.element.setAttribute("stroke-opacity",a),this.path.feature.strokeOpacity=a},this.strokeWidth=function(a){this.path.element.setAttribute("stroke-width",a),this.path.feature.strokeWidth=a}},JenScript.GeoJSONPlugin=function(a){this._init(a)},JenScript.Model.inheritPrototype(JenScript.GeoJSONPlugin,JenScript.Plugin),JenScript.Model.addMethods(JenScript.GeoJSONPlugin,{_init:function(a){a=a||{},a.priority=1e3,a.name="GeoJSONPlugin",JenScript.Plugin.call(this,a),this.data=[],this.paths=[],this.features=[],this.geoListeners=[]},onProjectionRegister:function(){var a=this;this.getProjection().addProjectionListener("boundChanged",function(){a.repaintPlugin()},"GeoJSONPlugin plugin listener for projection bound changed"),this.addPluginListener("scale",function(){for(var b=0;b<a.paths.length;b++){var c=a.paths[b];void 0!==c.revertScale&&1==c.revertScale&&c.element.setAttribute("stroke-width",c.feature.strokeWidth/a.sx)}},"GeoJSONPlugin plugin listener for scale changed, change stroke according to scale")},addGeoListener:function(a,b,c){if(void 0===c)throw new Error("GeoJSON listener, listener name should be supplied.");var d={action:a,onEvent:b,name:c};this.geoListeners[this.geoListeners.length]=d},fireGeoJSONEvent:function(a,b){for(var c=0;c<this.geoListeners.length;c++){var d=this.geoListeners[c];a===d.action&&d.onEvent(b)}},getFeatures:function(){return this.features},addGeoJSON:function(a){this.data[this.data.length]=a;var b=new JenScript.GeoJSON(a);if(b.isFeatureCollection())for(var c=new JenScript.MapFeatureCollection(a),d=0;d<c.size();d++){var e=c.getFeature(d);this.features[this.features.length]=e,this.fireGeoJSONEvent("register",{type:"register",target:void 0,feature:e,remote:void 0})}else if(b.isFeature){var e=new JenScript.MapFeature(a);this.features[this.features.length]=e,this.fireGeoJSONEvent("register",{type:"register",target:void 0,feature:e,remote:void 0})}this.repaintPlugin()},check:function(a,b,c,d,e){for(var f=0;f<this.paths.length;f++){var g=this.paths[f].polygon;if(this.isPointInPoly(g,new JenScript.Point2D(d,e))){if(0==this.paths[f].lockEnter){for(var h=0;h<this.paths.length;h++)1==this.paths[h].lockEnter&&(this.paths[h].lockEnter=!1,this.fireGeoJSONEvent("exit",{type:"exit",x:d,y:e,point:new JenScript.Point2D(d,e),target:this.paths[h],feature:this.paths[h].feature,remote:new JenScript.GeoRemote(this.paths[h])}));this.paths[f].lockEnter=!0,this.fireGeoJSONEvent("enter",{type:"enter",x:d,y:e,point:new JenScript.Point2D(d,e),target:this.paths[f],feature:this.paths[f].feature,remote:new JenScript.GeoRemote(this.paths[f])})}this.fireGeoJSONEvent(a,{type:a,x:d,y:e,point:new JenScript.Point2D(d,e),target:this.paths[f],feature:this.paths[f].feature,remote:new JenScript.GeoRemote(this.paths[f])})}else 1==this.paths[f].lockEnter&&(this.paths[f].lockEnter=!1,this.fireGeoJSONEvent("exit",{type:"exit",x:d,y:e,point:new JenScript.Point2D(d,e),target:this.paths[f],feature:this.paths[f].feature,remote:new JenScript.GeoRemote(this.paths[f])}))}},onPress:function(a,b,c,d){b===JenScript.ViewPart.Device&&this.check("press",a,b,c,d)},isPointInPoly:function(a,b){b=new JenScript.Point2D((b.x-this.tx)/this.sx,(b.y-this.ty)/this.sy);for(var c=!1,d=-1,e=a.length,f=e-1;++d<e;f=d)(a[d].y<=b.y&&b.y<a[f].y||a[f].y<=b.y&&b.y<a[d].y)&&b.x<(a[f].x-a[d].x)*(b.y-a[d].y)/(a[f].y-a[d].y)+a[d].x&&(c=!c);return c},isNearLine:function(a,b){for(var c=b.x,d=b.y,e=0;e<a.length-1;e++){var f=a[e],g=f.x,h=f.y,i=a[e+1],j=i.x,k=i.y,l=j-g,m=k-h,n=Math.abs(m*c-l*d-g*k+j*h)/Math.sqrt(Math.pow(l,2)+Math.pow(m,2));if(4>n)return!0}return!1},onRelease:function(a,b,c,d){b===JenScript.ViewPart.Device&&this.check("release",a,b,c,d)},onMove:function(a,b,c,d){b===JenScript.ViewPart.Device&&this.check("move",a,b,c,d)},paintPoint:function(a,b,c){var d=c.getCoordinates(),e=this.getProjection(),f=d[0],g=d[1],h=e.userToPixel({x:f,y:g}),i=(new JenScript.SVGCircle).center(h.x,h.y).radius(2).attr("transform","scale("+1/this.sx+")");i.fill("black").fillOpacity(.8),a.insertSVG(i.toSVG())},paintPolygon:function(a,b,c){for(var d=c.getCoordinates(),e=this.getProjection(),f=(new JenScript.SVGPath).Id(c.Id).attr("fill-rule","evenodd"),g=[],h=0;h<d.length;h++){for(var i=d[h],j=0;j<i.length;j++){var k=i[j],l=e.userToPixel({x:k[0],y:k[1]});g[g.length]=l,0==j?f.moveTo(l.x,l.y):f.lineTo(l.x,l.y)}f.close()}var m=f.stroke(b.strokeColor).strokeOpacity(b.strokeOpacity).strokeWidth(b.strokeWidth).fill(b.fillColor).fillOpacity(b.fillOpacity);void 0!==b.texture&&(a.deleteGraphicsElement(b.texture.getId()),a.definesTexture(b.texture),m.fillURL(b.texture.getId())),m=m.toSVG(),a.deleteGraphicsElement(c.Id),a.insertSVG(m),this.paths[this.paths.length]={element:m,polygon:g,feature:b,lockEnter:!1,revertScale:!0}},paintMultiPolygon:function(a,b,c){for(var d=c.getCoordinates(),e=0;e<d.length;e++){for(var f=d[e],g=this.getProjection(),h=(new JenScript.SVGPath).Id(c.Id+"_"+e).attr("fill-rule","evenodd"),i=[],j=0;j<f.length;j++){for(var k=f[j],l=0;l<k.length;l+=1){var m=k[l],n=g.userToPixel({x:m[0],y:m[1]});i[i.length]=n,0==l?h.moveTo(n.x,n.y):h.lineTo(n.x,n.y)}h.close()}var o=h.stroke(b.strokeColor).strokeOpacity(b.strokeOpacity).strokeWidth(b.strokeWidth).fill(b.fillColor).fillOpacity(b.fillOpacity);void 0!==b.texture&&(a.deleteGraphicsElement(b.texture.getId()),a.definesTexture(b.texture),o.fillURL(b.texture.getId())),o=o.toSVG(),a.deleteGraphicsElement(c.Id+"_"+e),a.insertSVG(o),this.paths[this.paths.length]={element:o,polygon:i,feature:b,lockEnter:!1,revertScale:!0}}},paintFeature:function(a,b){if(void 0===b.visible||b.visible!==!1){var c=b.getGeometry();c.isPolygon()?this.paintPolygon(a,b,c):c.isMultiPolygon()?this.paintMultiPolygon(a,b,c):c.isPoint()&&this.paintPoint(a,b,c)}},paintPlugin:function(a,b){if(b===JenScript.ViewPart.Device){this.paths=[];for(var c=0;c<this.features.length;c++){var d=this.features[c];this.paintFeature(a,d)}}}})}();
//# sourceMappingURL=jenscript-map.min.js.map